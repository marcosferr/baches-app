// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [postgis]
}

model User {
  id                      String                  @id @default(cuid())
  name                    String
  email                   String                  @unique
  password                String
  role                    Role                    @default(CITIZEN)
  avatar                  String?
  reports                 Report[]
  comments                Comment[]
  notifications           Notification[]
  createdAt               DateTime                @default(now())
  updatedAt               DateTime                @updatedAt
  notificationPreferences NotificationPreference?
}

model Report {
  id          String                                @id @default(cuid())
  picture     String
  description String
  severity    Severity
  status      Status                                @default(SUBMITTED)
  latitude    Float
  longitude   Float
  address     String?
  location    Unsupported("geometry(Point, 4326)")? @default(dbgenerated("ST_SetSRID(ST_MakePoint(longitude, latitude), 4326)"))
  comments    Comment[]
  author      User                                  @relation(fields: [authorId], references: [id])
  authorId    String
  createdAt   DateTime                              @default(now())
  updatedAt   DateTime                              @updatedAt

  @@index([location], name: "location_idx", type: Gist)
}

model Comment {
  id        String   @id @default(cuid())
  text      String
  report    Report   @relation(fields: [reportId], references: [id])
  reportId  String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Notification {
  id        String           @id @default(cuid())
  title     String
  message   String
  type      NotificationType
  read      Boolean          @default(false)
  relatedId String?
  user      User             @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
}

model NotificationPreference {
  id            String   @id @default(cuid())
  userId        String   @unique
  user          User     @relation(fields: [userId], references: [id])
  reportUpdates Boolean  @default(true)
  comments      Boolean  @default(true)
  email         Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

enum Role {
  ADMIN
  CITIZEN
}

enum Severity {
  LOW
  MEDIUM
  HIGH
}

enum Status {
  SUBMITTED
  PENDING
  IN_PROGRESS
  RESOLVED
  REJECTED
}

enum NotificationType {
  REPORT_STATUS
  COMMENT
  APPROVAL
  PRIORITY
}
